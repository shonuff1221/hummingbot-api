services:
  hummingbot-api:
    container_name: hummingbot-api
    image: hummingbot/hummingbot-api:latest
    ports:
      - "${HB_API_HOST_PORT}:${HB_API_CONTAINER_PORT}"
    volumes:
      - ./bots:/hummingbot-api/bots
      - /var/run/docker.sock:/var/run/docker.sock
    env_file:
      - .env
    environment:
      # Override specific values for Docker networking
      - BROKER_HOST=${BROKER_HOST}
      - DATABASE_URL=${DATABASE_URL}
      - SERVICE_URL_HUMMINGBOT_API=${SERVICE_URL_HUMMINGBOT_API}
    networks:
      - emqx-bridge
    depends_on:
      - postgres
  dashboard:
    container_name: dashboard
    image: hummingbot/dashboard:latest
    ports:
      - "${DASHBOARD_HOST_PORT}:${DASHBOARD_CONTAINER_PORT}"
    environment:
        - AUTH_SYSTEM_ENABLED=${AUTH_SYSTEM_ENABLED}
        - BACKEND_API_HOST=${BACKEND_API_HOST}
        - BACKEND_API_PORT=${BACKEND_API_PORT}
        - BACKEND_API_USERNAME=${BACKEND_API_USERNAME}
        - BACKEND_API_PASSWORD=${BACKEND_API_PASSWORD}
    volumes:
      - dashboard:/home/dashboard
    networks:
      - emqx-bridge
    depends_on:
      hummingbot-api:
        condition: service_started
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8501"]
      interval: 10s
      timeout: 5s
      retries: 3
  emqx:
    container_name: hummingbot-broker
    image: emqx:5
    restart: unless-stopped
    environment:
      - EMQX_NAME=${EMQX_NAME:-emqx}
      - EMQX_HOST=${EMQX_HOST:-node1.emqx.local}
      - EMQX_CLUSTER__DISCOVERY_STRATEGY=${EMQX_CLUSTER__DISCOVERY_STRATEGY:-static}
      - EMQX_CLUSTER__STATIC__SEEDS=${EMQX_CLUSTER__STATIC__SEEDS:-[emqx@node1.emqx.local]}
      - EMQX_LOADED_PLUGINS=${EMQX_LOADED_PLUGINS:-"emqx_recon,emqx_retainer,emqx_management,emqx_dashboard"}
    volumes:
      - emqx-data:/opt/emqx/data
      - emqx-log:/opt/emqx/log
      - emqx-etc:/opt/emqx/etc
    ports:
      - "${EMQX_MQTT_TCP_PORT:-1883}:1883"  # mqtt:tcp
      - "${EMQX_MQTT_TCP_SSL_PORT:-8883}:8883"  # mqtt:tcp:ssl
      - "${EMQX_MQTT_WS_PORT:-8083}:8083"  # mqtt:ws
      - "${EMQX_MQTT_WS_SSL_PORT:-8084}:8084"  # mqtt:ws:ssl
      - "${EMQX_HTTP_MGMT_PORT:-8081}:8081"  # http:management
      - "${EMQX_HTTP_DASHBOARD_PORT:-18083}:18083"  # http:dashboard
      - "${EMQX_WEB_STOMP_PORT:-61613}:61613"  # web-stomp gateway
    networks:
      emqx-bridge:
        aliases:
          - node1.emqx.local
    healthcheck:
      test: [ "CMD", "/opt/emqx/bin/emqx_ctl", "status" ]
      interval: 5s
      timeout: 25s
      retries: 5
  postgres:
    container_name: hummingbot-postgres
    image: postgres:15
    restart: unless-stopped
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    volumes:
      - postgres-data:/var/lib/postgresql/data
    ports:
      - "${POSTGRES_HOST_PORT}:5432"
    networks:
      - emqx-bridge
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5

networks:
  emqx-bridge:
    driver: bridge

volumes:
  emqx-data: { }
  emqx-log: { }
  emqx-etc: { }
  postgres-data: { }
  dashboard: { }
